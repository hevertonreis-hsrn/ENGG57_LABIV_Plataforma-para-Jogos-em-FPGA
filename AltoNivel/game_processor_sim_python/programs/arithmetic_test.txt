# Test program for arithmetic and logic operations

# Initialize registers with test values
MOV R1 R0    # R1 = 1
ADD R1 R1    # R1 = 2 (double R1)

# Set up more test values
MOV R2 R1    # R2 = 2
ADD R2 R2    # R2 = 4
ADD R2 R2    # R2 = 8
ADD R2 R2    # R2 = 16

# Addition test
MOV R3 R1    # R3 = 2
ADD R3 R2    # R3 = 2 + 16 = 18

# Subtraction test
MOV R4 R2    # R4 = 16
SUB R4 R1    # R4 = 16 - 2 = 14

# Multiplication test
MOV R5 R1    # R5 = 2
MUL R5 R4    # R5 = 2 * 14 = 28

# Division test
MOV R6 R5    # R6 = 28
DIV R6 R2    # R6 = 28 / 16 = 1

# Logical AND test
MOV R7 R2    # R7 = 16 (00010000 in binary)
MOV R8 R3    # R8 = 18 (00010010 in binary)
AND R7 R8    # R7 = 16 & 18 = 16

# Logical OR test
MOV R9 R1    # R9 = 2  (00000010 in binary)
MOV R10 R4   # R10 = 14 (00001110 in binary)
OR R9 R10    # R9 = 2 | 14 = 14

# Shift left test
MOV R11 R1   # R11 = 2
SHL R11 R1   # R11 = 2 << 2 = 8

# Shift right test
MOV R12 R2   # R12 = 16
SHR R12 R1   # R12 = 16 >> 2 = 4

# Compare and branch test
MOV R13 R3   # R13 = 18
MOV R14 R5   # R14 = 28
CMP R13 R14  # Sets flags: below=1 (R13 < R14)
RET
# Test complete - results are in R1-R14