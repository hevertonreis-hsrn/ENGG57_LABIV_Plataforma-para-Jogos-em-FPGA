#include <io.h>
#include <system.h>

// Master Interface register offsets (in bytes)
#define REG_BG_WIDTH        0   // Background width (e.g., 1920)
#define REG_BG_HEIGHT       2   // Background height (e.g., 1440)
#define REG_OFFSET_X        4   // Horizontal offset
#define REG_OFFSET_Y        6   // Vertical offset
#define REG_OFFSET_START    8   // Trigger configuration latch (write '1')

// Display dimensions
#define BG_WIDTH            1920
#define BG_HEIGHT           1440

// Viewport size (visible region)
#define VIEW_WIDTH          640
#define VIEW_HEIGHT         480

int main() {
	int offset_x = 0;
	int offset_y = 0;
	int last_btn = 0;

	// Initial setup: send full BG dimensions and latch config
	IOWR_16DIRECT(MASTER_INTERFACE_BASE, REG_BG_WIDTH, BG_WIDTH);
	IOWR_16DIRECT(MASTER_INTERFACE_BASE, REG_BG_HEIGHT, BG_HEIGHT);
	IOWR_16DIRECT(MASTER_INTERFACE_BASE, REG_OFFSET_START, 1);

    while (1) {
        int btns = IORD_16DIRECT(KEY_BASE, 0);

        // Detecta borda de botão pressionado (para evitar repetição)
        if (btns != last_btn) {
            if ((btns & 0x01) != 0) {  // botão 01 (direita)
                offset = 111;
                // Atualiza offset no master_interface
				IOWR_16DIRECT(MASTER_INTERFACE_BASE, REG_OFFSET_R, offset);
            } else if ((btns & 0x02) != 0) {  // botão 10 (esquerda)
                offset = 222;
                // Atualiza offset no master_interface
				IOWR_16DIRECT(MASTER_INTERFACE_BASE, REG_OFFSET_L, offset);
            }
        }

        last_btn = btns;
    }

    return 0;
}
